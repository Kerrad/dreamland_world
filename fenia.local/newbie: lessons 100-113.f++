n1 = function() {
    var mob, obj;

    if (.tmp.lessons == null)
	.tmp.lessons = .Map();
    this = .tmp.lessons;

    // Массив со всеми уроками.	
    tutorial = .Array();
    // Функция для удобного запихивания уроков в массив tutorial.
    Lesson = function(number, title, goal, description) {
	.tmp.lessons.tutorial[number] = .Map();
	.tmp.lessons.tutorial[number].title = title;
	.tmp.lessons.tutorial[number].goal = goal;
	.tmp.lessons.tutorial[number].description = description;
    };
    
    /*
     * Поле ch.lecture содержит номер текущего урока. Нумерацию уроков после
     * высадки с корабля начнем с 100. Каждый урок состоит из номера, описаний
     * (заданных через ф-ию Lesson) и набора триггеров на мобах/комнатах/предметах.
     */

     // Через секунду после выхода из последней комнаты корабля с порталом (40102)
     // дадут первый урок #100.
    Lesson(100, "услуги лекаря и команда 'лечить'", 
    "Найти в своем храме лекаря и выполнить команду {y{lRлечить{lEheal{x.", 
    function(ch) {
	ch.act(
	    "Лекари часто стоят прямо там, куда тебя приводит команда {y{lRвозврат{lErecall{x, или же рядом\n"
	    "например, в соседней комнате. Полезные команды для поиска: '{y{hc{lRоглядеться{lEscan{x', '{y{hc{lRгде лекарь{lEwhere healer{x'.\n"
	    "Список услуг можно запросить командой {y{hc{lRлечиться{lEheal{x. Если забудешь эту команду, просто\n"
	    "посмотри на лекаря. Пока ты не достигнешь {Y20{x уровня, лекарь будет помогать тебе\n"
	    "сам и безвозмездно, если заметит, что ты ранен%1$Gо||а, ослеплен%1$Gо||а или отравлен%1$Gо||а.", ch);
	    
    });
    .get_room_index(40102).postLeave = function(ch, to_room, movetype) {
	if (ch.is_npc())
	    return;
	if (ch.lecture != null && ch.lecture >= 100)
	    return;
	
	.scheduler.sleep(4);
	ch.act("Ты успешно сош%1$Gло|ел|ла на берег и попал%1$Gо||а в свой город.", ch);
	ch.act("Твой первый урок: {Gнайти в храме лекаря и выполнить команду '{y{lRлечить{lEheal{x'.");
	ch.act("Подробности смотри по команде {hc{y{lRуроки{lElessons{x.");
	ch.lecture = 100;
    };
    
    // Урок 100: лекарь и команда лечить
    onHeal = null;
    postHeal = function(healer, ch, args) {
	if (ch.lecture == null || ch.lecture != 100)
	    return;
    
	.scheduler.sleep(4);
	healer.psay(ch, "Молодец, %1$^C1, ты смог%1$Gло||ла не заблудиться в храме!", ch);
	healer.psay(ch, "Запомни как добраться сюда от того места, куда тебе переносит команда '{y{lRвозврат{lErecall{x'.");
	healer.psay(ch, "Если ты ранен%1$Gо||а, ослеплен%1$Gо||а или отравлен%1$Gо||а, просто подойди ко мне, и я попытаюсь помочь.", ch);
	healer.psay(ch, "Твой следующий урок: {Gнайти в храме яму для пожертвований и {1{yзаглянуть{2 в нее.{x");
	healer.psay(ch, "Подробности смотри по команде {hc{y{lRуроки{lElessons{x.");
	ch.lecture = 101;
    };
    
    // Инициализация всех лекарей в мире
    for (mob = .char_list; mob != null; mob = mob.next)
	if (mob.is_npc() && mob.hasOccupation("healer")) {
	    mob.pIndexData.onHeal = onHeal;
	    mob.pIndexData.postHeal = postHeal;
	}

    // Урок 101: яма для пожертвований
    Lesson(101, "яма для пожертвований; где искать вещи после смерти", 
    "Найти в храме яму для пожертвований и {1{yзаглянуть{2 в нее.", 
    function(ch) {
	ch.act(
	    "Прямо возле лекаря или в нескольких шагах от него расположена яма для пожертвований.\n"
	    "После твоей смерти труп твоей предыдущей инкарнации не вечен и разваливается спустя\n"
	    "{Y30{x минут (тиков). Если ты не успеешь забрать из трупа вещи и деньги, они попадут\n"
	    "именно в яму для пожертвований, и тогда ими сможет поживиться кто угодно.\n"
	    "Изучить содержимое ямы можно командой {y{hc{lRзаглянуть яма{lEexamine pit{x.\n"
	    "Взять что-то из ямы можно по команде {y{lRвзять {1{Dвещь{2 яма{lEget {1{Dвещь{2 pit{x.");
    });
    pitPostExamine = function(obj, ch, arg) {
	if (ch.lecture == null || ch.lecture != 101)
	    return;
	
	ch.act("За умение шарить по ямам ты получаешь {C50{x очков опыта.");
	ch.gainExp(50);
	.scheduler.sleep(1);
	
	ch.act(
	"В эту яму для пожертвований попадут твои вещи, если ты умрешь и не успеешь\n"
	"за 30 минут забрать их из трупа. Настала очередь следующего урока!\n"
	"Тебе необходимо: {Gнайти в твоем городе квестора и посмотреть на него (или неё){x.");
	ch.act("Подробности покажет команда {hc{y{lRуроки{lElessons{x.");
	ch.lecture = 102;
    };
    
    // Инициализация всех ям в мире
    for (pObj in .obj_index_list)
	if (pObj.item_type == .tables.item_table.container
	    && .isset_bit(pObj.value1, .tables.container_flags.pit))
	    pObj.postExamine = pitPostExamine;
    
    // Урок 102: найти квестора и посмотреть на него
    Lesson(102, "квестор и персональные задания", 
    "Найти в твоем городе квестора и посмотреть на него/неё.", 
    function(ch) {
	ch.act(
	    "В каждом городе есть специальный квестор, который выдает персональные задания и\n"
	    "продает вещи в обмен на квестовые очки. Они обычно сидят недалеко от храма.\n"
	    "Тебе помогут команды {y{hc{lRгде квестор{lEwhere questor{x и {y{hc{lRоглядеться{lEscan{x. Когда найдешь квестора,\n"
	    "посмотри на него и поинтересуйся списком заданий: {y{hc{lRзадание попросить{lEquest request{x.\n"
	    "В награду за выполнение заданий можно получить квестовые очки или опыт, золото,\n"
	    "практики, древние слова и свитки познания. Ты сможешь попробовать свои силы в \n"
	    "выполнении заданий, когда немного освоишься с перемещением по миру.");

    });
    questorPostLook = function(mob, looker, target) {
	var ch;
	// Реагировать, если на нас смотрят, а не если мы смотрим.
	if (mob != target)
	    return;
       
	ch = looker;
	if (ch.lecture == null || ch.lecture != 102)
	    return;

	mob.psay(ch, "Тебе не обязательно прямо сейчас просить у меня поручение, просто запомни, где меня найти на будущее.");
	mob.psay(ch, "За выполнение заданий я всегда щедро награжу. Почитай также, что обо мне пишут в справке.");
	
	.scheduler.sleep(4);
	mob.psay(ch, "Пожалуй, это и будет твоим следующим уроком: {Gпрочитать {hc{yсправка квесты{x {Gи {hc{yсправка квестор{x.");
	mob.psay(ch, "Только никуда не уходи, чтобы я видел%1$Gо||а, как ты читаешь!", mob);
	mob.psay(ch, "Подробности смотри по команде {hc{y{lRуроки{lElessons{x.");
	
	ch.lecture = 103;
    };
    
    // Урок 103: рядом с квестором набрать "справка квестор"
    Lesson(103, "подробнее о квестах", 
    "Стоя рядом с квестором, прочитать справку по темам {hhквесты{x и {hhквестор{x.", 
    function(ch) {
	ch.act(
	    "Если хочешь побольше узнать о различных видах заданий в нашем мире, изучи такие разделы:\n"
	    "{hc{yсправка квесты{x, {hc{yсправка квестор{x, {hc{yсправка задания зон{x, {hc{yсправка глобальный{x.\n"
	    "Также изучи все разделы, на которые эти статьи ссылаются.");
    });
    
    questorPostCommand = function(mob, ch, cmd, args) {
	if (ch.lecture == null || ch.lecture != 103)
	    return;
	if (cmd != "help")
	    return;
	if (!args.match("квестор") && !args.match("questor"))
	    return;
	    
	.scheduler.sleep(4);
	mob.psay(ch, "Молодец, %C1!", ch);
	mob.psay(ch, "Твое следующее задание: {Gпопасть в Храм Лео в Мидгаарде.{x");
	mob.psay(ch, "Подробности смотри по команде {hc{y{lRуроки{lElessons{x.");
	ch.lecture = 104;
    };

    // Инициализация всех квесторов в мире
    for (mob = .char_list; mob != null; mob = mob.next)
	if (mob.is_npc() && mob.hasOccupation("quest_master")) {
	    mob.pIndexData.postCommand = questorPostCommand;
	    mob.pIndexData.postLook = questorPostLook;
	}
    
    
    // Урок 104: попасть в Храм Лео (3001)
    Lesson(104, "как попасть в Храм Лео в Мидгаарде", 
    "Попасть в Храм Лео в Мидгаарде.", 
    function(ch) {
	if ("midgaard".strPrefix(ch.hometown.name)) 
	    ch.act("Пришла пора получше изучить твой родной город, Мидгаард.");
	else
	    ch.act("Пришла пора получше изучить столицу мира, Мидгаард.");
	
	if (ch.hometown.name == "midgaard_neutral") {
	    ch.act(
	    "Молитва о перемещении (команда {hc{y{lRвозврат{lErecall{x) перенесет тебя из любой точки мира обратно\n"
	    "в Храм Лео, а во всех остальных храмах установлены порталы, ведущие сюда же.");

	} else if (ch.hometown.name == "midgaard_evil") {
	    ch.act("Молитва о перемещении (команда {hc{y{lRвозврат{lErecall{x) перенесет тебя из любой точки мира\n"
	    "обратно в Темный Храм. Это один из трех храмов города Мидгаарда. Неподалеку\n"
	    "установлен портал, ведущий в центр города, в Храм Лео. Когда найдешь портал,\n"
	    "просто выполни команду {hc{y{lRвойти портал{lEenter portal{x.");
	    
	} else if (ch.hometown.name == "midgaard_good") {
	    ch.act("Молитва о перемещении (команда {hc{y{lRвозврат{lErecall{x) перенесет тебя из любой точки мира\n"
	    "обратно в Храм Солнца. Это один из трех храмов города Мидгаарда. Неподалеку\n"
	    "установлен портал, ведущий в центр города, в Храм Лео. Когда найдешь портал,\n"
	    "просто выполни команду {hc{y{lRвойти портал{lEenter portal{x.");
	    
	} else {
	    ch.act("Молитва о перемещении (команда {hc{y{lRвозврат{lErecall{x) перенесет тебя из любой точки мира\n"
	    "обратно в храм твоего города. Узнать, в каком городе ты сейчас находишься,\n"
	    "поможет команда {hc{y{lRгде{lEwhere{x. Если хочешь попасть в город Мидгаард, найди в своем храме\n"
	    "портал, ведущий прямо в Храм Лео. Когда найдешь портал, просто выполни команду\n"
	    "{hc{y{lRвойти портал{lEenter portal{x.");
	}
    });
    .get_room_index(3001).postGreet = function(ch, fromRoom, moveType) {
	if (ch.lecture == null || ch.lecture != 104)
	    return;
	
	ch.act("Приветствуем тебя в самом сердце Мидгаарда, столицы мира!");
	ch.act("За твой безотказный внутренний компас ты получаешь {C100{x очков опыта.");
	ch.gainExp(100);
	
	.scheduler.sleep(1);
	ch.act("Твоя новая миссия: {Gизучить карту города в атласе.{x");
	ch.act("Подробности смотри по команде {hc{y{lRуроки{lElessons{x.");
	ch.lecture = 105;
	// Загрузить в инвентарь атлас с картами 40024.
	if (ch.get_obj_carry_vnum(40024) == null)
	    .get_obj_index(40024).create().obj_to_char(ch);
    };

    Lesson(105, "где найти карты Мидгаарда и не только", 
    "Посмотреть на карту центрального Мидгаарда в атласе.", 
    function(ch) {
	ch.act(
	"У тебя в инвентаре (команда {y{hc{lRинв{lEinv{x) есть атлас с картами. Это книга и ее можно\n"
	"читать: команда {y{hc{lRчитать атлас{lEread atlas{x покажет оглавление.  Для урока тебя интересует\n"
	"карта  Центрального Мидгаарда: прочитай  соответствующую  страницу  атласа.\n"
	"Кроме этого, там найдутся схематические карты других частей Мидгаарда и почти\n"
	"всех крупных городов. Полный список карт можно найти на сайте. Кроме того,\n"
	"если пользоваться вебклиентом, карту можно увидеть в справке по каждой зоне,\n"
	"а карту текущей зоны с подсветкой - нажав на кнопку с иконкой карты вверху.");
    });
    // Урок 105: посмотреть на карту page01 в атласе 40024
    .get_obj_index(40024).postLook = function(obj, ch, keyword) {
	if (ch.lecture == null || ch.lecture != 105)
	    return;
	if (!"page01".is_name(keyword))
	    return;
	    
	ch.act("Ты отлично справил%Gось|ся|ась!", ch);
	ch.act("Теперь по этой карте {Gнайди Рыночную Площадь и приди туда{x.");
	ch.act("Это и будет твоим следующим заданием, а подробности по команде {hc{y{lRуроки{lElessons{x.");
	ch.lecture = 106;
    };

    Lesson(106, "Рыночная Площадь и маршруты для бега", 
    "Добраться до Рыночной Площади Мидгаарда, ориентируясь по карте из атласа.", 
    function(ch) {
	ch.act(
	"Сориентируйся, где ты находишься на карте: команда {y{hc{lRсм{lElook{x покажет, среди прочего,\n"
	"название твоей комнаты. Еще можно воспользоваться командой {hc{y{lRгде{lEwhere{x или же просто\n"
	"вернуться в Храм Лео. Если пользоваться кнопкой карты в вебклиенте, то можно\n"
	"увидеть свое текущее положение, подсвеченное красным цветом. Теперь найди на\n"
	"карте Рыночную Площадь и сообрази, как до нее дойти. От Рыночной Площади\n"
	"начинаются многие пути до других зон. Например, справка по зоне {hhДеревня Гномов{x\n"
	"покажет путь 8вю, что означает 8 раз на восток от Рыночной и один раз на юг.\n"
	"Для быстрого перемещения по маршруту используется команда {hh{y{lRбежать{lErun{x.");
    });
    // Урок 106: попасть на МСМ (комната 3014)
    .get_room_index(3014).postGreet = function(ch, fromRoom, moveType) {
	var valk;
	
	if (ch.lecture == null || ch.lecture != 106)
	    return;
	
	// Загрузить Валькирию (3076), если ее тут нет.
	valk = get_mob_vnum(3076);
	if (valk == null) {
	    valk = .get_mob_index(3076).create();
	    valk.char_to_room(this);
	}
	    
	valk.psay(ch, "Рыночная площадь - очень важная, ведь многие пути к другим зонам ведут именно отсюда.");
	valk.psay(ch, "Если ты, например, посмотришь справку по местности {hhДеревня Гномов{hx, то увидишь там путь: {lR8вю{lE8es{x.");
	valk.psay(ch, "Это означает пройти отсюда 8 раз на восток и один раз на юг.");
	valk.psay(ch, "Теперь {Gнайди на карте Хрюкающий Кабан и купи себе там пива{x.");
	valk.psay(ch, "Все подробности покажет команда {hc{y{lRуроки{lElessons{x.");
	ch.lecture = 107;
    };
    
    Lesson(107, "о пользе пива", 
    "Дойти до Хрюкающего Кабана в Мидгаарде и купить пива.", 
    function(ch) {
	ch.act(
	"Уже привычным из предыдущих уроков способом найди на карте Мидгаарда таверну\n"
	"Хрюкающий Кабан и доберись до нее. В самой таверне есть вывеска, прочитав которую,\n"
	"ты поймешь как пользоваться баром или магазином. Начиная с {Y10{x уровня, тебя начнут\n"
	"мучать голод и жажда. Для утоления надо что-то {hc{yесть{x и {hc{yпить{x, иначе перестанут\n"
	"восстанавливаться очки здоровья и энергии. Некоторые жидкости, такие как {Wмолоко{x,\n"
	"{yмед{x или {yпиво{x,  утоляют и голод и жажду одновременно,  поэтому имеет смысл\n"
	"носить с собой бочонок с такой жидкой едой. Также прочитай справку по команде {hhпить{x.");
    });

    Lesson(108, "фонтаны и емкости для жидкости (задание бармена)", 
    "Набрать в емкость воды из фонтана и принести в Хрюкающий Кабан.", 
    function(ch) {
	ch.act(
	"C емкостями для жидкости (бочками, бутылками и флягами) можно проделывать\n"
	"различные манипуляции. Выпить содержимое командой {y{lRпить{lEdrink{x, вылить из емкости\n"
	"на пол командой {y{lRвылить{lEpour {Dемкость{y out{x, наполнить из фонтана или источника командой {y{lRнаполнить{lEfill{x.\n"
	"Все это поможет тебе в выполнении задания бармена. А фонтан обнаружится\n"
	"почти сразу при выходе из таверны.");
    });
    
    // Урок 107: дойти до Хрюкающего Кабана (3007)
    // Урок 108: набрать в фонтане воды и занести в ХК
    .get_room_index(3007).postGreet = function(ch, fromRoom, moveType) {
	var barman;
	
	if (ch.lecture == null)
	    return;
	if (ch.lecture != 107 && ch.lecture != 108)
	    return;
	
	// Загрузить бармена (3040), если его тут нет.
	barman = get_mob_vnum(3040);
	if (barman == null) {
	    barman = .get_mob_index(3040).create();
	    barman.char_to_room(this);
	}
	
	if (ch.lecture == 107) {
	    // Небольшая награда, чтобы было что тратить.
	    ch.act("За великолепный навык поиска питейных заведений ты получаешь {C50{x очков опыта и {Y2{x золотые монеты.");
	    ch.gainExp(50);
	    ch.gold = ch.gold + 2;
	    
	    barman.psay(ch, "О, %^C1, а тебя наверное Валькирия послала?", ch);
	    barman.psay(ch, "Ну что ж, располагайся, и не забудь по{1{yсмотреть{2 на {1{yлисток{2 с инструкциями.");
	    
	}
	else if (ch.lecture == 108) {
	    var water;
	    
	    water = ch.get_liquid_carry("water");
	    if (water == null || water.value1 == 0) {
		barman.psay(ch, "Эх, и где же моя вода?");
		barman.psay(ch, "Ты глянь команду {1{y{hc{lRуроки{lElesson{x{2, там всё расписано!");
		return;
	    }

	    ch.act("%^C1 тут же отбирает у тебя %O4 и дает в награду {Y5{x золотых.", barman, water);
	    ch.gold = ch.gold + 5;
	    water.extract();
	    barman.psay(ch, "Вот спасибо, %^C1, а то мэрия Мидгаарда уже неделю не может починить злочасные трубы.", ch);
	    barman.psay(ch, "Я дам тебе еще один совет, как заработать денег.");
	    barman.psay(ch, "{GКожевенник наградит тебя за тушку кролика, которые обитают на Арене.{x");
	    barman.psay(ch, "Почитай, что пишут по команде {1{y{hc{lRуроки{lElesson{x{2, если неясно, что к чему.");
	    ch.lecture = 109;
	}
    };
    
    // Урок 107: купить пива у бармена 3040
    .get_mob_index(3040).postSell = function(barman, ch, obj, cost, number) {
	if (ch.lecture == null || ch.lecture != 107)
	    return;
	// Реагировать только на покупку пива.
	if (obj.item_type != .tables.item_table.drink 
	    || .Liquid(obj.value2).name != "beer")	    
	    return;
	
	barman.psay(ch, "Отличный выбор! Пиво утоляет не только жажду, но и голод.");
	barman.psay(ch, "А из бочонка получится вместительная емкость для других напитков.");
	barman.psay(ch, "Кстати, у меня в баре недавно отключили холодную воду.");
	barman.psay(ch, "Ты не мог%1$Gло||ла бы {1{Gнабрать воды в фонтане и принести сюда{2?", ch);
	barman.psay(ch, "А заодно это и будет твой следующий {1{y{hcурок{x{2.");
	ch.lecture = 108;
    };

    Lesson(109, "ориентировка по карте (задание кожевенника)", 
    "Убить кролика на Арене (MUD Школа) и принести трупик кожевеннику в Мидгаарде.", 
    function(ch) {
	ch.act(
	"Это более сложное задание на ориентировку, чем те, что тебе встречались ранее.\n"
	"На карте Мидгаарда найди как пройти в зону {hhMUD Школа{x, оттуда найди вход на Арену.\n"
	"Посмотреть путь к какой-либо зоне можно в справке по ней. Не забывай, что\n"
	"некоторые двери могут быть закрыты, и обнаружить их можно командой {hc{y{lRоглядеться{lEscan{x.\n"
	"Убив кролика, надо быстро сориентироваться, куда нести его хладный труп, иначе\n"
	"он развалится прямо у тебя в руках. Не забывай про команду {y{lRгде{lEwhere{x.");
    });
    // Урок 109: принести труп кролика кожевенику 3010
    .get_mob_index(3010).postGreet = function(mob, ch) {
	var corpse;
	
	if (ch.lecture == null || ch.lecture != 109)
	    return;
	
	corpse = ch.inventory.filter(function() {
	    return item_type == .tables.item_table.npc_corpse
		    && short_descr.match("кролик");
	}).front();
	
	if (corpse == null) {
	    mob.psay(ch, "Мне бы кролика тушку, а то совсем шкуры для выделки закончились.");
	    mob.psay(ch, "Вот те, что обитают на Арене, как раз подойдут.");
	    return;
	}
	
	ch.act("%^C1 дает тебе {Y5{x золотых в обмен на %O4.", mob, corpse);
	mob.interpret("thank " + ch.name);
	corpse.extract();
	// 110 - послать ремонтировать шило.
	ch.lecture = null;
    };
    
/* далi буде
    Lesson(110, "ремонт оружия и доспехов (задание кожевенника)", "", function(ch) {
    });
    Lesson(111, "где тренировать свои параметры", "", function(ch) {
    });
    Lesson(112, "где найти свою гильдию", "", function(ch) {
    });
    Lesson(113, "как практиковать умения; разные учителя", "", function(ch) {
    });
*/
	
}
